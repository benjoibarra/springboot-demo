openapi: 3.0.0
info:
  title: User API
  description: API for managing users
  version: 1.0.0
paths:
  /users/{id}:
    get:
      summary: Get a user by ID
      description: Retrieve a user by their unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The unique identifier of the user.
      responses:
        '200':
          description: User details retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  fName:
                    type: string
                  lName:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User id not found!"
                  errorDetails:
                    type: object
                    additionalProperties: true
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input!"
                  errorDetails:
                    type: object
                    additionalProperties: true

    delete:
      summary: Delete a user by ID
      description: Deletes a user by their unique ID.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The unique identifier of the user.
      responses:
        '200':
          description: User deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  fName:
                    type: string
                  lName:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User id not found!"
                  errorDetails:
                    type: object
                    additionalProperties: true
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input!"
                  errorDetails:
                    type: object
                    additionalProperties: true

    put:
      summary: Update a user by ID
      description: Updates a user by their unique ID. The ID in the request body is ignored.
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
          description: The unique identifier of the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  description: Ignored during update.
                fName:
                  type: string
                  description: Updated first name of the user.
                lName:
                  type: string
                  description: Updated last name of the user.
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  fName:
                    type: string
                  lName:
                    type: string
        '404':
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User id not found!"
                  errorDetails:
                    type: object
                    additionalProperties: true
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input!"
                  errorDetails:
                    type: object
                    additionalProperties: true

  /users:
    post:
      summary: Create a new user
      description: Create a new user with the provided first name and last name.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fName:
                  type: string
                  description: First name of the user.
                lName:
                  type: string
                  description: Last name of the user.
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  fName:
                    type: string
                  lName:
                    type: string
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid input!"
                  errorDetails:
                    type: object
                    additionalProperties: true
